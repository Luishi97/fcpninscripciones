{"version":3,"sources":["config/api.js","Register/useRegisterStudent.js","constants/ui/forms.js","Register/Form/RegisterPersonalData.jsx","Register/Form/RegisterPaymantData.jsx","Register/Form/RegisterFileData.jsx","shared/assets/logo.png","Register/index.jsx","shared/hooks/useHandlerFormData.js"],"names":["api","axios","create","baseURL","process","timeout","headers","mode","getData","path","setData","setIsLoading","get","then","res","console","log","data","catch","err","notification","message","description","className","finally","onCorrect","post","Modal","success","title","content","error","JSON","parse","request","response","deleteFile","id","delete","confirm","LAYOUT","labelCol","xs","span","md","wrapperCol","LAYOUT_BUTTOM","offset","Option","Select","FormRegisterPersonalData","initialValue","handlerFormData","onFinish","name","initialValues","autoComplete","onChange","target","split","value","Item","label","rules","required","placeholder","max","type","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","htmlType","block","FormRegisterPaymentData","FormRegisterFileData","formData","useState","isLoading","val","style","width","noStyle","Dragger","supportServerRender","action","maxCount","onRemove","v","fileName","xmlns","fill","viewBox","stroke","height","strokeLinecap","strokeLinejoin","strokeWidth","d","loading","Step","Steps","Register","current","setCurrent","initialData","setFormData","useCallback","cleanFormData","useHandlerFormData","handlerRegisterForm","icon","invoiceName","invoiceNit","onOk","invoice","nit","payment","urlFile","file","url","dateOfPay","paymentDateOfPay","toDate","invoceName","invoceNit","useRegisterStudent","handlerFinish","gutter","CSSTransition","in","unmountOnExit","classNames","direction","status","src","fcpnLogo","alt"],"mappings":"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","file":"static/js/6.7ae71081.chunk.js","sourcesContent":["import { Modal, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport './notifications.sass'\r\n\r\nconst HOST_API = process.env.REACT_APP_HOST_API\r\n\r\nconst api = axios.create({\r\n  baseURL: `http://${HOST_API}/api/`,\r\n  timeout: 5000,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  mode: 'cors'\r\n})\r\n\r\nexport const getData = (path, setData, setIsLoading) => {\r\n  setIsLoading(true)\r\n  api\r\n    .get(`/${path}`)\r\n    .then(res => {\r\n      console.log('res.data', res.data)\r\n      setData(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log('err', err)\r\n      setData(null)\r\n      notification['error']({\r\n        message: 'No se pudo obtener la lista de alumnos',\r\n        description: 'Hubo un error al obtener la lista de alumnos ' + err,\r\n        className: 'notifications'\r\n      })\r\n    })\r\n    .finally(() => setIsLoading(false))\r\n}\r\n\r\nexport const create = (path, data, setIsLoading, onCorrect) => {\r\n  setIsLoading(true)\r\n  api\r\n    .post(`/${path}`, data)\r\n    .then(() => {\r\n      Modal.success({\r\n        title: 'Registrado con exito',\r\n        content: 'Se registro su usuario satisfactoriamente'\r\n      })\r\n      // notification['success']({\r\n      //   message: 'Registrado con exito',\r\n      //   description: 'Se registro su usuario satisfactoriamente',\r\n      //   className: 'notifications'\r\n      // })\r\n      if (onCorrect) onCorrect()\r\n    })\r\n    .catch(err => {\r\n      Modal.error({\r\n        title: 'Error al registrar',\r\n        content: 'No se pudo registrar: ' + JSON.parse(err.request.response).message\r\n      })\r\n      // notification['error']({\r\n      //   message: 'No se pudo registrar',\r\n      //   description: 'Hubo un error al registrar ' + err,\r\n      // })\r\n    })\r\n    .finally(() => setIsLoading(false))\r\n}\r\n\r\nexport const deleteFile = id => {\r\n  api\r\n    .delete(`/upload/${id}`)\r\n    .then(res => {\r\n      console.log('res.data', res.data)\r\n    })\r\n    .catch(err => console.log('err', err))\r\n}\r\n","import {Modal} from 'antd';\r\nimport { useCallback } from 'react'\r\nimport { create } from '../config/api'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useRegisterStudent(cleanFormData, setCurrent) {\r\n  const handlerRegisterForm = useCallback((formData, setIsLoading) => {\r\n    confirm({\r\n      title: 'Verifique que sus datos para la factura son correctos',\r\n      icon: <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#F4D03F\" width={32} height={32}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\" />\r\n      </svg>,\r\n      content: <div>\r\n        <strong>Nombre:</strong> {formData.invoiceName} \r\n        <br />\r\n        <strong>NIT: </strong>{formData.invoiceNit}\r\n      </div>,\r\n      onOk() {\r\n        formData.invoice = {}\r\n        formData.invoice.name = formData.invoiceName\r\n        formData.invoice.nit = formData.invoiceNit\r\n\r\n        formData.payment = {}\r\n        formData.payment.urlFile = formData.file.file.response.data.url\r\n        formData.payment.dateOfPay = formData.paymentDateOfPay.toDate()\r\n\r\n        delete formData.invoceName\r\n        delete formData.invoceNit\r\n        delete formData.paymentDateOfPay\r\n        delete formData.file\r\n\r\n        create('students', formData, setIsLoading, () => {cleanFormData(); setCurrent(0)})\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return handlerRegisterForm\r\n}\r\n","export const LAYOUT = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 0\r\n    },\r\n    md: {\r\n      span: 6\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24\r\n      },\r\n      md: {\r\n        span: 16\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const LAYOUT_BUTTOM = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24\r\n    },\r\n    md: {\r\n      offset: 6,\r\n      span: 16\r\n    }\r\n  }\r\n}\r\n","import { Form, Input, Button, Select } from 'antd'\r\nimport { LAYOUT, LAYOUT_BUTTOM } from '../../constants/ui/forms'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function FormRegisterPersonalData({ initialValue, handlerFormData, onFinish }) {\r\n  return (\r\n    <Form\r\n      name=\"inscriptions\"\r\n      {...LAYOUT}\r\n      onFinish={onFinish}\r\n      initialValues={initialValue}\r\n      autoComplete=\"off\"\r\n      onChange={({ target }) => {\r\n        handlerFormData({ name: target.id.split('_')[1], value: target.value })\r\n      }}\r\n    >\r\n      <h1>Datos personales</h1>\r\n      <Form.Item\r\n        label=\"Nombres\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar sus nombres'\r\n          }\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Ingrese sus nombres\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Primer apellido\"\r\n        name=\"firstLastName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar sus nombres'\r\n          }\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Ingrese su primer apellido\" />\r\n      </Form.Item>\r\n      <Form.Item label=\"Segundo apellido\" name=\"secondLastName\">\r\n        <Input placeholder=\"Ingrese su segundo apellido\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Carnet de identidad\"\r\n        name=\"ci\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar su número de carnet'\r\n          }\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Ingrese su número de carnet\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Teléfono\"\r\n        name=\"tellphone\"\r\n        rules={[{ max: 8, message: 'Ingrese un número válido' }]}\r\n      >\r\n        <Input type=\"number\" placeholder=\"Ingrese su número de teléfono\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Celular\"\r\n        name=\"cellphone\"\r\n        rules={[\r\n          { required: true, message: 'Debe ingresae su número de celular' },\r\n          { max: 8, message: 'Ingrese un número válido' }\r\n        ]}\r\n      >\r\n        <Input type=\"number\" placeholder=\"Ingrese su número de celular\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Correo electónico\"\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar su número de carnet'\r\n          }\r\n        ]}\r\n      >\r\n        <Input type=\"email\" placeholder=\"Ingrese su correo electrónico\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Departamento\"\r\n        name=\"city\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe seleccionar su departamento'\r\n          }\r\n        ]}\r\n      >\r\n        <Select\r\n          showSearch\r\n          placeholder=\"Departamento de residencia\"\r\n          optionFilterProp=\"children\"\r\n          filterOption={(input, option) =>\r\n            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          onChange={value => handlerFormData({ name: 'city', value })}\r\n        >\r\n          <Option value=\"La Paz\">La Paz</Option>\r\n          <Option value=\"Cochabamba\">Cochabamba</Option>\r\n          <Option value=\"Santa Cruz\">Santa Cruz</Option>\r\n          <Option value=\"Sucre\">Sucre</Option>\r\n          <Option value=\"Oruro\">Oruro</Option>\r\n          <Option value=\"Potosí\">Potosí</Option>\r\n          <Option value=\"Tarija\">Tarija</Option>\r\n          <Option value=\"Beni\">Beni</Option>\r\n          <Option value=\"Pando\">Pando</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item {...LAYOUT_BUTTOM}>\r\n        <Button type=\"primary\" htmlType=\"submit\" block>\r\n          Siguiente\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nFormRegisterPersonalData.propTypes = {\r\n  initialValue: PropTypes.object,\r\n  handlerFormData: PropTypes.func,\r\n  onFinish: PropTypes.func\r\n}\r\n","import { Form, Input, Button, DatePicker } from 'antd'\r\nimport { LAYOUT, LAYOUT_BUTTOM } from '../../constants/ui/forms'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function FormRegisterPaymentData({ initialValue, handlerFormData, onFinish }) {\r\n  return (\r\n    <Form\r\n      name=\"inscriptions\"\r\n      {...LAYOUT}\r\n      initialValues={initialValue}\r\n      onFinish={onFinish}\r\n      autoComplete=\"off\"\r\n      onChange={({ target }) => {\r\n        handlerFormData({ name: target.id.split('_')[1], value: target.value })\r\n      }}\r\n    >\r\n      <h1>Datos de su factura</h1>\r\n      <Form.Item\r\n        label=\"Nombre de la factura\"\r\n        name=\"invoiceName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar el nombre de la factura'\r\n          }\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Ingrese el nombre de la factura\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"NIT\"\r\n        name=\"invoiceNit\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Debe ingresar el nit'\r\n          }\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Ingrese el NIT\" />\r\n      </Form.Item>\r\n      <Form.Item {...LAYOUT_BUTTOM}>\r\n        <Button type=\"primary\" htmlType=\"submit\" block>\r\n          Siguiente\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nFormRegisterPaymentData.propTypes = {\r\n  initialValue: PropTypes.object,\r\n  handlerFormData: PropTypes.func,\r\n  onFinish: PropTypes.func\r\n}\r\n","import { useState } from 'react'\r\nimport { Form, Button, Upload, DatePicker } from 'antd'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\nimport { LAYOUT, LAYOUT_BUTTOM } from '../../constants/ui/forms'\r\nimport { deleteFile } from '../../config/api'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function FormRegisterFileData({\r\n  initialValue,\r\n  handlerFormData,\r\n  formData,\r\n  onFinish\r\n}) {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  return (\r\n    <Form\r\n      name=\"inscriptions\"\r\n      {...LAYOUT}\r\n      initialValues={initialValue}\r\n      onFinish={val => onFinish({ ...val, ...formData }, setIsLoading)}\r\n      autoComplete=\"off\"\r\n    >\r\n      <h1>Boleta de pago</h1>\r\n      <Form.Item label=\"Boleta de pago\">\r\n        <Form.Item\r\n          label=\"Fecha de pago\"\r\n          name=\"paymentDateOfPay\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Debe ingresar la fecha de pago'\r\n            }\r\n          ]}\r\n        >\r\n          <DatePicker\r\n            onChange={value => handlerFormData({ name: 'paymentDateOfPay', value })}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"file\"\r\n          noStyle\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Debe subir su boleta de pago'\r\n            }\r\n          ]}\r\n        >\r\n          <Upload.Dragger\r\n            name=\"file\"\r\n            supportServerRender={false}\r\n            action={'http://' + process.env.REACT_APP_HOST_API + '/api/upload'}\r\n            maxCount={1}\r\n            onRemove={v => {\r\n              deleteFile(v.response.data.fileName)\r\n            }}\r\n          >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                width={24}\r\n                height={24}\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M8 4H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2m-4-1v8m0 0l3-3m-3 3L9 8m-5 5h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293h3.172a1 1 0 00.707-.293l2.414-2.414a1 1 0 01.707-.293H20\"\r\n                />\r\n              </svg>\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click o arrastre el archivo a esta área para subirlo</p>\r\n            <p className=\"ant-upload-hint\">Solo puede subir una imagen o un pdf</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {/* <ReCAPTCHA\r\n          ref={recaptchaRef}\r\n          sitekey=\"Your client site key\"\r\n          onChange={onChange}\r\n        /> */}\r\n      </Form.Item>\r\n      <Form.Item {...LAYOUT_BUTTOM}>\r\n        <Button type=\"primary\" htmlType=\"submit\" block loading={isLoading}>\r\n          Registrar\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nFormRegisterFileData.propTypes = {\r\n  initialValue: PropTypes.object,\r\n  formData: PropTypes.object,\r\n  handlerFormData: PropTypes.func,\r\n  onFinish: PropTypes.func\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.1273f5a3.png\";","import { Col, Row, Steps } from 'antd'\r\nimport useRegisterStudent from './useRegisterStudent'\r\nimport FormRegisterPersonalData from './Form/RegisterPersonalData'\r\nimport './register.sass'\r\nimport { useState } from 'react'\r\nimport FormRegisterPaymentData from './Form/RegisterPaymantData'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport FormRegisterFileData from './Form/RegisterFileData'\r\nimport fcpnLogo from '../shared/assets/logo.png'\r\nimport useHandlerFormData from '../shared/hooks/useHandlerFormData'\r\n\r\nconst { Step } = Steps\r\n\r\nexport default function Register() {\r\n  const [current, setCurrent] = useState(0)\r\n  const { formData, handlerFormData, cleanFormData } = useHandlerFormData()\r\n  const handlerRegisterForm = useRegisterStudent(cleanFormData, setCurrent)\r\n  console.log('formData', formData)\r\n  const handlerFinish = () => {\r\n    setCurrent(current + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"register__container\">\r\n      <Row gutter={24} className=\"register\">\r\n        <Col xs={{ span: 24 }} md={{ span: 12 }} className=\"register__forms\">\r\n          <CSSTransition in={current === 0} unmountOnExit timeout={200} classNames=\"alert\">\r\n            <FormRegisterPersonalData\r\n              initialValue={formData}\r\n              onFinish={handlerFinish}\r\n              handlerFormData={handlerFormData}\r\n            />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition in={current === 1} unmountOnExit timeout={200} classNames=\"alert\">\r\n            <FormRegisterPaymentData\r\n              initialValue={formData}\r\n              onFinish={handlerFinish}\r\n              handlerFormData={handlerFormData}\r\n            />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition in={current === 2} unmountOnExit timeout={200} classNames=\"alert\">\r\n            <FormRegisterFileData\r\n              formData={formData}\r\n              initialValue={formData}\r\n              onFinish={handlerRegisterForm}\r\n              handlerFormData={handlerFormData}\r\n            />\r\n          </CSSTransition>\r\n        </Col>\r\n        <Col xs={{ span: 24 }} md={{ span: 12 }} className=\"steps__container\">\r\n          <div className=\"steps\">\r\n            <Steps type=\"navigation\" current={current} onChange={setCurrent} direction=\"vertical\">\r\n              <Step status={current > 0 ? 'finish' : 'process'} title=\"Datos personales\" />\r\n              <Step\r\n                status={current > 1 ? 'finish' : current === 1 ? 'process' : 'wait'}\r\n                title=\"Datos de su factura\"\r\n              />\r\n              <Step\r\n                status={current > 2 ? 'finish' : current === 2 ? 'process' : 'wait'}\r\n                title=\"Boleta de pago\"\r\n              />\r\n            </Steps>\r\n            <img src={fcpnLogo} alt=\"logo\" className=\"logo\" />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport default function useHandlerFormData(initialData) {\r\n    const [formData, setFormData] = useState(initialData || {})\r\n\r\n    const handlerFormData = useCallback(({name, value}) => {\r\n        setFormData({...formData, [name]: value})\r\n    }, [formData])\r\n\r\n    const cleanFormData = () => setFormData({})\r\n\r\n    return {formData, handlerFormData, cleanFormData}\r\n}"],"sourceRoot":""}